" Source files from this directory
let s:dot_file_dir = $HOME . "/.dot-file-collection/"

" Explicitly set the Leader and set timeouts
let mapleader = ","
set timeout timeoutlen=1000 ttimeoutlen=100

" Press F4 to toggle highlighting on/off, and show current value.
" See http://vim.wikia.com/wiki/VimTip14
set hlsearch incsearch
noremap <F4> :set hlsearch! hlsearch?<CR>

" Set a list of characters that I might want to make visible
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<,nbsp:@
map <Leader>l :set list!<CR>

" Retain selection after indenting
" Try to go into visual mode (v), thenselect several lines of code here and
" then press ``>`` several times.
vnoremap < <gv  " better indentation
vnoremap > >gv  " better indentation

" Show whitespace
" MUST be inserted BEFORE the colorscheme command
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
au InsertLeave * match ExtraWhitespace /\s\+$/

" Color scheme
set t_Co=256
set background=dark
colorscheme solarized

" Showing line numbers and length
set number  " show line numbers
set tw=79   " width of document (used by gd)
set nowrap  " don't automatically wrap on load
set fo-=t   " don't automatically wrap text when typing
if exists("&colorcolumn")
  set colorcolumn=80
  highlight ColorColumn ctermbg=233
endif

set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required!
Plugin 'gmarik/Vundle.vim'

" My Bundles here:
"
" original repos on github
Plugin 'tpope/vim-fugitive'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
Plugin 'tpope/vim-rails.git'
Plugin 'Valloric/MatchTagAlways'
Plugin 'Valloric/YouCompleteMe'
Plugin 'bling/vim-airline'
Plugin 'davidhalter/jedi-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-git'
Plugin 'godlygeek/tabular'
Plugin 'majutsushi/tagbar'
Plugin 'drmingdrmer/xptemplate'
Plugin 'scrooloose/syntastic'
Plugin 'altercation/vim-colors-solarized'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'sjl/vitality.vim'
Plugin 'derekwyatt/vim-scala'
Plugin 'ktvoelker/sbt-vim'
Plugin 'tfnico/vim-gradle'
Plugin 'henrik/vim-indexed-search'
Plugin 'danro/rename.vim'
Plugin 'wesQ3/vim-windowswap'
Plugin 'h13ronim/vim-comments'
Plugin 'tpope/vim-commentary'
Plugin 'mileszs/ack.vim'
Plugin 'rodjek/vim-puppet'
Plugin 'guns/vim-clojure-static'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'kien/ctrlp.vim'

" vim-scripts repos
Plugin 'L9'
Plugin 'yavdb'
Plugin 'Command-T'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Getting vim-airline settings
execute "source " . s:dot_file_dir . "vim/airline_settings"

""""""""""""""""
" Easy motion
""""""""""""""""
let g:EasyMotion_leader_key = '<Leader>m'

" Add Spaces inside parentheses, A8C Style
map <Leader>o ci(<space><space><Esc>hp

" Change backspace settings
" Make it behave as you would normally expect
set bs=2

" Recognize filetypes
execute "source " . s:dot_file_dir . "vim/ft_settings"

" bind Ctrl+<movement> keys to move around the windows,
" instead of using Ctrl+w + <movement>
" Every unnecessary keystroke that can be saved is good for your health :)
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Set default options for the diff windows
set diffopt=vertical

syntax on
set autoindent
set tabpagemax=15

" I need vim shortcuts to save me time in LaTeX.
execute "source " . s:dot_file_dir . "vim/latex_shortcuts"

" Set up par options
set formatprg=par\ -w50

" Getting jedi configuration
execute "source " . s:dot_file_dir . "vim/jedi_config"

" Set up browser for eclim
let g:EclimBrowser = "chrome"

" Getting a shortcut to copy stuff into my system clipboard
vnoremap <silent> <Leader>c y:call
  \ system('system_specific_fun copy', @")<CR>gv
nnoremap <silent> <Leader>d :call
  \ system('system_specific_fun copy', @")<CR>

noremap <silent> <leader>mw :call MarkWindowSwap()<CR>
noremap <silent> <leader>pw :call DoWindowSwap()<CR>

" Let ctags look up recursively in parent directories
" See http://leonard.io/blog/2013/04/editing-scala-with-vim/ for inspiration
set tags=tags;/

" Scala related configuration
let g:scala_sort_across_groups=1

" Nerdtree related configuration
let g:NERDTreeShowHidden=1

" Ycm configuration
let g:ycm_global_ycm_extra_conf = $HOME . "/.ycm_extra_conf.py"

" Ycm go to declaration
nnoremap <Leader>q
  \ :YcmCompleter GoToDeclaration<CR>
